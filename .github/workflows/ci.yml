name: Continuous Integration (CI)

on:
    push:
      branches:
        - develop
    pull_request:
      branches:
        - develop

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '9.x'  

      - name: Install dependencies
        run: dotnet restore

      - name: Build the project
        run: dotnet build --configuration Release

      - name: Run tests
        run: dotnet test $(find . -name '*Tests.csproj') --configuration Release --no-build --collect:"XPlat Code Coverage" --results-directory ./TestResults
      
      - name: Convert coverage report
        run: |
            dotnet tool install --global dotnet-reportgenerator-globaltool
            reportgenerator -reports:./TestResults/**/coverage.cobertura.xml -targetdir:./TestResults/CoverageConverted -reporttypes:Cobertura

  
  sonarqube:
    name: SonarQube
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0  
      - name: SonarQube Scan
        uses: SonarSource/sonarqube-scan-action@v4
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

  create-pull-request:
    runs-on: ubuntu-latest
    needs: [build, sonarqube]  
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Create Pull Request
      uses: actions/github-script@v7
      with:
        github-token: ${{ secrets.PULL_TOKEN }}
        script: |
          const { owner, repo } = context.repo;
          github.rest.pulls.create({
            owner,
            repo,
            title: "Merge develop into main - V1.0.${{ github.run_number }}",
            head: "develop",
            base: "main",
            body: "Atualizando a branch main com as mudan√ßas mais recentes da branch develop."
          });
        
    